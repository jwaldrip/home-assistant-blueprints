# ver 1.2

blueprint:
  name: Climate Conserve
  description: Pauses HVAC when windows/doors open; resumes last state once closed
  domain: automation

  input:
    climate_device:
      description: Climate entity used for climate control. 
      name: Climate Device
      selector:
        entity:
          domain: climate

    doors_windows:
      description: Group of entities that will activate automation. (Assumes 'on' means 'open') 
      name: Door and window sensors.
      selector:
        entity:
          domain: 
            - binary_sensor
            - window
            - door

    pause_delay_secs:
      description: Time to wait before pausing HVAC in seconds.
      name: Pause Delay
      default: 0
      selector:
        number:
          min: 0
          unit_of_measurement: "Seconds"

    resume_delay_secs:
      description: Time to wait before resuming HVAC in seconds.
      name: Resume Delay
      default: 30
      selector:
        number:
          min: 0
          unit_of_measurement: "Seconds"

mode: single      
trigger:
- platform: state
  entity_id: !input doors_windows
  from: 'off'
  to: 'on'
  for:
    seconds: !input pause_delay_secs
  id: group_open
condition:
- condition: not
  conditions:
  - condition: state
    entity_id: !input climate_device
    state: 'off'
action:
- service: scene.create
  data:
    scene_id: climate_snapshot
    snapshot_entities: !input climate_device
- service: climate.set_hvac_mode
  target:
    entity_id: !input climate_device
  data:
    hvac_mode: 'off'
- wait_for_trigger:
  - platform: state
    entity_id: !input doors_windows
    from: 'on'
    to: 'off'
    for:
      seconds: !input resume_delay_secs
  continue_on_timeout: false
- scene: scene.climate_snapshot
